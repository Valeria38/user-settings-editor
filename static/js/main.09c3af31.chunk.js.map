{"version":3,"sources":["components/UserForm/index.jsx","redux/actions.js","redux/types.js","components/UserData/index.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["Paragraph","Typography","connect","state","userData","user","dataToEdit","dispatch","setName","newName","type","payload","setEmail","newEmail","close","name","surname","email","phone","useState","isNameExpanded","setIsNameExpanded","isEmailExpanded","setIsEmailExpanded","nameField","setNameField","surnameField","setSurnameField","emailField","setEmailField","showExpanded","field","className","span","onClick","value","onChange","event","target","data","isNameHidden","setIsNameHidden","isFormShown","setIsFormShown","dataSource","renderItem","item","Item","id","bordered","App","initialState","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09c3af31.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setName, setEmail } from '../../redux/actions';\r\nimport { Row, Col, Typography, Icon, Input } from 'antd';\r\nimport './style.css';\r\nconst { Paragraph } = Typography;\r\n\r\nconst UserForm = ({ userData, setName, setEmail, close }) => {\r\n  const { name, surname, email, phone } = userData;\r\n  const [isNameExpanded, setIsNameExpanded] = useState(true);\r\n  const [isEmailExpanded, setIsEmailExpanded] = useState(true);\r\n  const [nameField, setNameField] = useState(name);\r\n  const [surnameField, setSurnameField] = useState(surname);\r\n  const [emailField, setEmailField] = useState(email);\r\n\r\n  const handleSubmit = () => {\r\n    setName({ name: nameField, surname: surnameField });\r\n    setEmail({ email: emailField });\r\n    close();\r\n  };\r\n\r\n  const showExpanded = field => {\r\n    switch (field) {\r\n      case 'name':\r\n        setIsNameExpanded(!isNameExpanded);\r\n        break;\r\n      case 'email':\r\n        setIsEmailExpanded(!isEmailExpanded);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className='userform'>\r\n      <Col span={3}></Col>\r\n      {/* <Col span={8}></Col> */}\r\n      <Col span={12}>\r\n        <Typography>\r\n          <Paragraph className='userform__header'>\r\n            Имя, телефон, email\r\n            <span onClick={handleSubmit}>OK</span>\r\n          </Paragraph>\r\n        </Typography>\r\n        <Typography>\r\n          <Paragraph className='userform__title'>\r\n            {!isNameExpanded ? (\r\n              <span>ИМЯ ФАМИЛИЯ</span>\r\n            ) : (\r\n              <span>ИЗМЕНИТЬ ИМЯ И ФАМИЛИЮ</span>\r\n            )}\r\n            <Icon\r\n              type={isNameExpanded ? 'up' : 'down'}\r\n              className='userform__icon'\r\n              onClick={() => showExpanded('name')}\r\n            />\r\n          </Paragraph>\r\n          {isNameExpanded && (\r\n            <>\r\n              <Input\r\n                className='userform__input'\r\n                value={nameField}\r\n                onChange={event => setNameField(event.target.value)}\r\n              />\r\n              <Input\r\n                className='userform__input'\r\n                value={surnameField}\r\n                onChange={event => {\r\n                  setSurnameField(event.target.value);\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        </Typography>\r\n        {!isNameExpanded && (\r\n          <Typography>\r\n            <Paragraph className='userform__field'>\r\n              {nameField} {surnameField}\r\n            </Paragraph>\r\n          </Typography>\r\n        )}\r\n        <Typography>\r\n          <Paragraph className='userform__title'>\r\n            {!isEmailExpanded ? (\r\n              <span>EMAIL</span>\r\n            ) : (\r\n              <span>ИЗМЕНИТЬ EMAIL</span>\r\n            )}\r\n            <Icon\r\n              type={isEmailExpanded ? 'up' : 'down'}\r\n              className='userform__icon'\r\n              onClick={() => showExpanded('email')}\r\n            />\r\n          </Paragraph>\r\n        </Typography>\r\n        <Typography>\r\n          {isEmailExpanded && (\r\n            <Input\r\n              className='userform__input'\r\n              value={emailField}\r\n              onChange={event => setEmailField(event.target.value)}\r\n            />\r\n          )}\r\n          {!isEmailExpanded && (\r\n            <Paragraph className='userform__field'>{emailField}</Paragraph>\r\n          )}\r\n        </Typography>\r\n        <Typography>\r\n          <Paragraph className='userform__title'>PHONE</Paragraph>\r\n        </Typography>\r\n        <Typography>\r\n          <Paragraph className='userform__field'>{phone}</Paragraph>\r\n        </Typography>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userData: state.user.dataToEdit\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setName: newName => dispatch(setName(newName)),\r\n  setEmail: newEmail => dispatch(setEmail(newEmail))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserForm);\r\n","import * as types from './types';\r\n\r\nexport const setName = newName => ({\r\n  type: types.SET_NAME,\r\n  payload: newName\r\n});\r\n\r\nexport const setEmail = newEmail => ({\r\n  type: types.SET_EMAIL,\r\n  payload: newEmail\r\n});\r\n","export const SET_NAME = 'SET_NAME';\r\nexport const SET_EMAIL = 'SET_EMAIL';\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { List, Row, Col, Icon, Typography } from 'antd';\r\nimport UserForm from '../UserForm';\r\nimport './style.css';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nconst UserData = ({ data, dataToEdit }) => {\r\n  const [isNameHidden, setIsNameHidden] = useState(false);\r\n  const [isFormShown, setIsFormShown] = useState(false);\r\n\r\n  const handleEdit = itemId => {\r\n    // only name field is handled in this function\r\n    if (itemId === 'name') {\r\n      setIsNameHidden(!isNameHidden);\r\n      setIsFormShown(!isFormShown);\r\n    }\r\n  };\r\n\r\n  const close = () => {\r\n    setIsNameHidden(false);\r\n    setIsFormShown(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        {/* <Col span={6}></Col> */}\r\n        <Col span={12} className='userdata'>\r\n          <Typography className='userdata__header'>\r\n            <div>\r\n              <Paragraph className='userdata__header-title'>\r\n                {dataToEdit.name} {dataToEdit.surname}\r\n              </Paragraph>\r\n              <Paragraph className='userdata__header-text'>\r\n                {dataToEdit.email}\r\n              </Paragraph>\r\n            </div>\r\n            <div>\r\n              <Paragraph className='userdata__header-title'>ID 28366</Paragraph>\r\n              <Paragraph className='userdata__header-text'>\r\n                Demo режим\r\n              </Paragraph>\r\n            </div>\r\n          </Typography>\r\n          <List\r\n            dataSource={data}\r\n            renderItem={item => (\r\n              <>\r\n                <List.Item\r\n                  className={\r\n                    isNameHidden && item.id === 'name'\r\n                      ? 'userdata__item hidden'\r\n                      : 'userdata__item'\r\n                  }\r\n                  onClick={() => handleEdit(item.id)}\r\n                >\r\n                  {item.name}\r\n                  <div>\r\n                    {item.data && (\r\n                      <span className='userdata__item-info'>{item.data}</span>\r\n                    )}\r\n                    <Icon type='right' className='userdata__item-icon' />\r\n                  </div>\r\n                </List.Item>\r\n              </>\r\n            )}\r\n            bordered\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {isFormShown && <UserForm close={close} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.user.data,\r\n  dataToEdit: state.user.dataToEdit\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserData);\r\n","import React from 'react';\r\nimport UserData from './components/UserData';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <UserData />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\n\r\nconst initialState = {\r\n  data: [\r\n    { name: 'Имя, телефон, email', id: 'name' },\r\n    { name: 'Страна, часовой пояс, язык', data: 'Русский', id: 'country' },\r\n    { name: 'Пароль и безопасность', id: 'password' },\r\n    { name: 'Валюта', data: 'UAH', id: 'currency' },\r\n    { name: 'Social login', id: 'socialLogin' },\r\n    { name: 'Удалить аккаунт', id: 'deleteAccount' }\r\n  ],\r\n  dataToEdit: {\r\n    name: 'John',\r\n    surname: 'Doe',\r\n    email: 'johndoe@gmail.com',\r\n    phone: '+380501111111'\r\n  }\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.SET_NAME:\r\n      return {\r\n        ...state,\r\n        dataToEdit: {\r\n          ...state.dataToEdit,\r\n          name: payload.name,\r\n          surname: payload.surname\r\n        }\r\n      };\r\n    case types.SET_EMAIL:\r\n      return {\r\n        ...state,\r\n        dataToEdit: {\r\n          ...state.dataToEdit,\r\n          email: payload.email\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}